unit uPedido;

interface

uses System.Generics.Collections;

type
  TPedidoItem = class
  private
    FID: Int64;
    FCodigoProduto: Integer;
    FDescricaoProduto: String;
    FQuantidade: Double;
    FValorUnitario: Currency;
    FValorTotal: Currency;
  public
    property ID: Int64 read FID write FID;
    property CodigoProduto: Integer read FCodigoProduto write FCodigoProduto;
    property DescricaoProduto: String read FDescricaoProduto write FDescricaoProduto;
    property Quantidade: Double read FQuantidade write FQuantidade;
    property ValorUnitario: Currency read FValorUnitario write FValorUnitario;
    property ValorTotal: Currency read FValorTotal write FValorTotal;
  end;

  TPedido = class
  private
    FNumeroPedido: Integer;
    FDataEmissao: TDateTime;
    FCodigoCliente: Integer;
    FValorTotal: Currency;
    FItens: TObjectList<TPedidoItem>;
  public
    constructor Create;
    destructor Destroy; override;
    procedure RecalcularTotal;
    property NumeroPedido: Integer read FNumeroPedido write FNumeroPedido;
    property DataEmissao: TDateTime read FDataEmissao write FDataEmissao;
    property CodigoCliente: Integer read FCodigoCliente write FCodigoCliente;
    property ValorTotal: Currency read FValorTotal write FValorTotal;
    property Itens: TObjectList<TPedidoItem> read FItens;
  end;

implementation

{ TPedido }

uses
  System.SysUtils;

constructor TPedido.Create;
begin
  FItens := TObjectList<TPedidoItem>.Create(True);
  FDataEmissao := Now;
end;

destructor TPedido.Destroy;
begin
  FItens.Free;
  inherited;
end;

procedure TPedido.RecalcularTotal;
var
  Item: TPedidoItem;
  S: Currency;
begin
  S := 0;
  for Item in FItens do
    S := S + Item.ValorTotal;
  FValorTotal := S;
end;

end.
